/*
 * resource
 *
 * resource
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"github.com/golang-jwt/jwt"
	sw "github.com/stefnef/Flowingo/m/internal/api/http"
	"github.com/stefnef/Flowingo/m/internal/api/http/handler"
	"github.com/stefnef/Flowingo/m/internal/core/service"
	"github.com/stefnef/Flowingo/m/internal/repository"
	"github.com/stefnef/Flowingo/m/pkg"
	"log"
)

// TODO replace by concrete service implementation
type AuthServiceTmp struct{}

var verifyAuth func(jwt jwt.Token) error

func (authServiceMock AuthServiceTmp) VerifyAuth(jwt jwt.Token) error {
	return verifyAuth(jwt)
}

func main() {
	log.Printf("Server started")

	var generator = pkg.NewGeneratorImpl()
	var resourceRepository = repository.NewInternalResourceRepository(generator)
	var infoHandler = handler.NewInfoHandler(service.NewInfoService())
	var resourceHandler = handler.NewResourceHandler(service.NewResourceService(resourceRepository, generator))
	var authHandler = handler.NewAuthHandler(&AuthServiceTmp{})
	var errorHandler = handler.NewErrorHandler()

	router := sw.NewRouter(infoHandler, resourceHandler, authHandler, errorHandler)
	_ = router.SetTrustedProxies(nil)

	log.Fatal(router.Run(":8080"))
}
